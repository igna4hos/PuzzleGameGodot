[gd_scene load_steps=4 format=3 uid="uid://cm6grj0ttyeg6"]

[ext_resource type="Script" uid="uid://c26enp1pscogu" path="res://scripts/Gameplay/DetailConnectorController.gd" id="2_hnubk"]
[ext_resource type="AnimationLibrary" uid="uid://c0as0onbyox7f" path="res://assets/animations/EasyRotationAnimation.res" id="3_ysa0f"]

[sub_resource type="GDScript" id="GDScript_hnubk"]
script/source = "extends Node2D

@onready var left_root: Node3D  = $LeftELementPart/SubViewportContainer/SubViewport/LeftElement
@onready var var_ref_left: Node2D  = $LeftELementPart
@onready var connector_controller: Node3D = $LeftELementPart/SubViewportContainer/SubViewport/LeftElement

var side_parts: Array = []

var current_index_side := 0

func _ready() -> void:
	var level_data = Global.model_kits.get(1, null)
	if level_data:
		side_parts = level_data[\"side_parts\"]
	else:
		print(\"No data for level:\", Global.selected_level)
	
	load_side_parts()
	await get_tree().create_timer(4.0).timeout
	_next_model()

func load_side_parts() -> void:
	for c in left_root.get_children():
		c.queue_free()

	var left_data = side_parts[(current_index_side) % side_parts.size()]
	var left_part = load(left_data.scene).instantiate()
	left_root.add_child(left_part)
	
	if connector_controller and connector_controller.has_method(\"demo_scale\"):
		print(\"SCALE\")
		connector_controller.demo_scale()
	if connector_controller and connector_controller.has_method(\"play_idle_rotation\"):
		print(\"MOVE LEFT RIGHT\")
		connector_controller.play_idle_rotation()

func _next_model() -> void:
	current_index_side += 1
	if current_index_side >= side_parts.size():
		current_index_side = 0
	load_side_parts()
"

[node name="Node2D" type="Node2D"]
script = SubResource("GDScript_hnubk")

[node name="LeftELementPart" type="Node2D" parent="."]
position = Vector2(1000, 500)

[node name="SubViewportContainer" type="SubViewportContainer" parent="LeftELementPart"]
offset_left = -256.0
offset_top = -256.0
offset_right = 256.0
offset_bottom = 256.0

[node name="SubViewport" type="SubViewport" parent="LeftELementPart/SubViewportContainer"]
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 4

[node name="LeftElement" type="Node3D" parent="LeftELementPart/SubViewportContainer/SubViewport"]
script = ExtResource("2_hnubk")

[node name="EasyRotationAnimation" type="AnimationPlayer" parent="LeftELementPart/SubViewportContainer/SubViewport/LeftElement"]
libraries = {
&"EasyRotationAnimation": ExtResource("3_ysa0f")
}

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="LeftELementPart/SubViewportContainer/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.19037)

[node name="Camera3D" type="Camera3D" parent="LeftELementPart/SubViewportContainer/SubViewport"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 1.5, 0)
